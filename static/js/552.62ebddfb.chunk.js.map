{"version":3,"file":"static/js/552.62ebddfb.chunk.js","mappings":"mTACAA,EAAAA,GAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAiB,mCAAG,WAAMC,GAAN,uFACRF,EAAAA,GAAAA,IAAU,qBAAsB,CACrDG,OAAQ,CACNC,QAAS,oCAEXC,OAAQH,EAAWG,SALU,cACzBC,EADyB,yBAQxBA,EAASC,MARe,2CAAH,sDAWjBC,EAAS,mCAAG,gGAASC,EAAT,EAASA,UAAWP,EAApB,EAAoBA,WAApB,SACAF,EAAAA,GAAAA,IAAA,6BAAgCS,GAAa,CAClEN,OAAQ,CACNC,QAAS,oCAEXC,OAAQH,EAAWG,SALE,cACjBC,EADiB,yBAQhBA,EAASC,MARO,2CAAH,sDAWTG,EAAe,mCAAG,gGAASC,EAAT,EAASA,QAAST,EAAlB,EAAkBA,WAAlB,SACNF,EAAAA,GAAAA,IAAA,iBAAoBW,GAAW,CACpDR,OAAQ,CACNC,QAAS,oCAEXC,OAAQH,EAAWG,SALQ,cACvBC,EADuB,yBAQtBA,EAASC,MARa,2CAAH,sDAUfK,EAAY,mCAAG,gGAASD,EAAT,EAASA,QAAST,EAAlB,EAAkBA,WAAlB,SACHF,EAAAA,GAAAA,IAAA,iBAAoBW,EAApB,YAAuC,CAC5DR,OAAQ,CACNC,QAAS,oCAEXC,OAAQH,EAAWG,SALK,cACpBC,EADoB,yBAQnBA,EAASC,MARU,2CAAH,sDAWZM,EAAe,mCAAG,gGAASF,EAAT,EAASA,QAAST,EAAlB,EAAkBA,WAAlB,SACNF,EAAAA,GAAAA,IAAA,iBAAoBW,EAApB,YAAuC,CAC5DR,OAAQ,CACNC,QAAS,oCAEXC,OAAQH,EAAWG,SALQ,cACvBC,EADuB,yBAQtBA,EAASC,MARa,2CAAH,qD,sKC5CfO,EAAcC,EAAAA,GAAAA,GAAH,8CAIXC,EAAcD,EAAAA,GAAAA,GAAH,uEAIXE,EAAeF,EAAAA,GAAAA,GAAH,gDAIZG,EAAUH,EAAAA,GAAAA,EAAH,4F,SCiDpB,EArDgB,WACd,OAAsCI,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQV,GAAYW,EAAAA,EAAAA,MAAZX,QA6BR,OA3BAY,EAAAA,EAAAA,YAAU,WACR,IAAMrB,EAAa,IAAIsB,gBACjBC,EAAgB,CACpBd,QAAAA,EACAT,WAAAA,GAJY,wCAOd,kGAESS,EAFT,kEAK8BE,EAAAA,EAAAA,IAAgBY,GAL9C,gBAKYC,EALZ,EAKYA,QAERL,EAAeK,GAPnB,kDASIC,QAAQC,IAAR,MATJ,2DAPc,sBAsBd,OAtBc,mCAoBdC,GAEO,WACL3B,EAAW4B,OACZ,CACF,GAAE,CAACnB,IAECS,GAKH,8BAC0B,IAAvBA,EAAYW,QACX,SAACjB,EAAD,UACGM,EAAYY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACf,UAACnB,EAAD,YACE,UAACC,EAAD,sBAAuBgB,MACvB,uBAAIC,MAFYC,EADH,OAQnB,SAACjB,EAAD,yDAfG,IAmBV,C","sources":["components/api/Api.js","components/reviews/Reviews.styled.js","components/reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async controller => {\n  const response = await axios.get('trending/movie/day', {\n    params: {\n      api_key: '6f46b11c91adf322aba101aff37aa78d',\n    },\n    signal: controller.signal,\n  });\n\n  return response.data;\n};\n\nexport const getMovies = async ({ userQuery, controller }) => {\n  const response = await axios.get(`search/movie?query=${userQuery}`, {\n    params: {\n      api_key: '6f46b11c91adf322aba101aff37aa78d',\n    },\n    signal: controller.signal,\n  });\n\n  return response.data;\n};\n\nexport const getMovieDetails = async ({ movieId, controller }) => {\n  const response = await axios.get(`/movie/${movieId}`, {\n    params: {\n      api_key: '6f46b11c91adf322aba101aff37aa78d',\n    },\n    signal: controller.signal,\n  });\n\n  return response.data;\n};\nexport const getMovieCast = async ({ movieId, controller }) => {\n  const response = await axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: '6f46b11c91adf322aba101aff37aa78d',\n    },\n    signal: controller.signal,\n  });\n\n  return response.data;\n};\n\nexport const getMovieReviews = async ({ movieId, controller }) => {\n  const response = await axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: '6f46b11c91adf322aba101aff37aa78d',\n    },\n    signal: controller.signal,\n  });\n\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const ListReviews = styled.ul`\n  margin-left: 30px;\n`;\n\nexport const ItemReviews = styled.li`\n  padding-top: 15px;\n  padding-bottom: 15px;\n`;\nexport const TitleRewiews = styled.h3`\n  margin-bottom: 15px;\n`;\n\nexport const Message = styled.p`\n  padding-top: 15px;\n  padding-bottom: 15px;\n  font-weight: 500;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../api/Api';\nimport {\n  ListReviews,\n  ItemReviews,\n  TitleRewiews,\n  Message,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviewsById, setReviewsById] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const paramsRequest = {\n      movieId,\n      controller,\n    };\n\n    async function fetchMovieReviews() {\n      try {\n        if (!movieId) {\n          return;\n        }\n        const { results } = await getMovieReviews(paramsRequest);\n\n        setReviewsById(results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchMovieReviews();\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  if (!reviewsById) {\n    return null;\n  }\n\n  return (\n    <>\n      {reviewsById.length !== 0 ? (\n        <ListReviews>\n          {reviewsById.map(({ author, content, id }) => (\n            <ItemReviews key={id}>\n              <TitleRewiews>Author: {author}</TitleRewiews>\n              <p>{content}</p>\n            </ItemReviews>\n          ))}\n        </ListReviews>\n      ) : (\n        <Message>We don`t have any reviews for this movie</Message>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","getTrendingMovies","controller","params","api_key","signal","response","data","getMovies","userQuery","getMovieDetails","movieId","getMovieCast","getMovieReviews","ListReviews","styled","ItemReviews","TitleRewiews","Message","useState","reviewsById","setReviewsById","useParams","useEffect","AbortController","paramsRequest","results","console","log","fetchMovieReviews","abort","length","map","author","content","id"],"sourceRoot":""}