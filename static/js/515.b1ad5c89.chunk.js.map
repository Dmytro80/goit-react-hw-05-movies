{"version":3,"file":"static/js/515.b1ad5c89.chunk.js","mappings":"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","sources":["components/api/Api.js","components/movieList/MovieList.styled.js","components/movieList/MovieList.jsx","components/searchBox/SearchBox.styled.js","components/searchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async controller => {\n  const response = await axios.get('trending/movie/day', {\n    params: {\n      api_key: '6f46b11c91adf322aba101aff37aa78d',\n    },\n    signal: controller.signal,\n  });\n\n  return response.data;\n};\n\nexport const getMovies = async ({ userQuery, controller }) => {\n  const response = await axios.get(`search/movie?query=${userQuery}`, {\n    params: {\n      api_key: '6f46b11c91adf322aba101aff37aa78d',\n    },\n    signal: controller.signal,\n  });\n\n  return response.data;\n};\n\nexport const getMovieDetails = async ({ movieId, controller }) => {\n  const response = await axios.get(`/movie/${movieId}`, {\n    params: {\n      api_key: '6f46b11c91adf322aba101aff37aa78d',\n    },\n    signal: controller.signal,\n  });\n\n  return response.data;\n};\nexport const getMovieCast = async ({ movieId, controller }) => {\n  const response = await axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: '6f46b11c91adf322aba101aff37aa78d',\n    },\n    signal: controller.signal,\n  });\n\n  return response.data;\n};\n\nexport const getMovieReviews = async ({ movieId, controller }) => {\n  const response = await axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: '6f46b11c91adf322aba101aff37aa78d',\n    },\n    signal: controller.signal,\n  });\n\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const MovieItem = styled.li`\n  padding: 4px 0;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { MovieItem } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movies => (\n        <MovieItem key={movies.id}>\n          <Link to={`/movies/${movies.id}`} state={{ from: location }}>\n            {movies.original_title}\n          </Link>\n        </MovieItem>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const SearchForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\nexport const SearchFormInput = styled(Field)`\n  display: inline-block;\n  width: 350px;\n  height: 44px;\n  font: inherit;\n  font-size: 20px;\n border: 1px solid rgb(237, 236, 236);\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n  font: inherit;\n  font-size: 18px;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 56px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\n  display: inline-block;\n  width: 100%;\n  height: auto;\n  color: red;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  SearchForm,\n  SearchFormInput,\n  SearchFormButton,\n  Error,\n} from './SearchBox.styled';\n\nconst initialValues = {\n  query: '',\n};\n\nconst schema = Yup.object().shape({\n  query: Yup.string()\n    .trim()\n    .min(1, 'Enter query!')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Search query may contain only letters, apostrophe, dash and spaces.'\n    ),\n});\n\nconst SearchBox = ({ onSubmitForm }) => {\n  const handleSubmit = ({ query }, { resetForm }) => {\n    const normalizedQuery = query.trim();\n\n    onSubmitForm(normalizedQuery);\n\n    resetForm();\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      {({ isSubmitting }) => {\n        return (\n          <SearchForm>\n            <SearchFormInput\n              type=\"text\"\n              name=\"query\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search movies\"\n            />\n            <SearchFormButton type=\"submit\" disabled={isSubmitting}>\n              Search\n            </SearchFormButton>\n\n            <Error name=\"query\" component=\"span\" />\n          </SearchForm>\n        );\n      }}\n    </Formik>\n  );\n};\nexport default SearchBox;\n","import SearchBox from 'components/searchBox/SearchBox';\nimport { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovies } from '../components/api/Api';\nimport MovieList from 'components/movieList/MovieList';\n\nconst Movies = () => {\n  const [items, setItems] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const userQuery = searchParams.get('query');\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const paramsRequest = {\n      userQuery,\n      controller,\n    };\n\n    async function fetchMovies() {\n      try {\n        if (!userQuery) {\n          return;\n        }\n        const { results } = await getMovies(paramsRequest);\n\n        results.length !== 0 && setItems(results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchMovies();\n\n    return () => {\n      controller.abort();\n    };\n  }, [userQuery]);\n\n  const formSubmitHandler = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n    setItems([]);\n  };\n  return (\n    <main>\n      <SearchBox onSubmitForm={formSubmitHandler} />\n      {items.length !== 0 && <MovieList movies={items} />}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","getTrendingMovies","controller","params","api_key","signal","response","data","getMovies","userQuery","getMovieDetails","movieId","getMovieCast","getMovieReviews","MovieItem","styled","movies","location","useLocation","map","to","id","state","from","original_title","SearchForm","Form","SearchFormInput","Field","SearchFormButton","Error","ErrorMessage","initialValues","query","schema","Yup","shape","trim","min","matches","onSubmitForm","onSubmit","resetForm","normalizedQuery","validationSchema","isSubmitting","type","name","autoComplete","autoFocus","placeholder","disabled","component","useState","items","setItems","useSearchParams","searchParams","setSearchParams","get","useEffect","AbortController","paramsRequest","results","length","console","log","fetchMovies","abort","MovieList"],"sourceRoot":""}