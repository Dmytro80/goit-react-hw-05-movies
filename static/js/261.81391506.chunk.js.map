{"version":3,"file":"static/js/261.81391506.chunk.js","mappings":"mTACAA,EAAAA,GAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAiB,mCAAG,WAAMC,GAAN,uFACRF,EAAAA,GAAAA,IAAU,qBAAsB,CACrDG,OAAQ,CACNC,QAAS,oCAEXC,OAAQH,EAAWG,SALU,cACzBC,EADyB,yBAQxBA,EAASC,MARe,2CAAH,sDAWjBC,EAAS,mCAAG,gGAASC,EAAT,EAASA,UAAWP,EAApB,EAAoBA,WAApB,SACAF,EAAAA,GAAAA,IAAA,6BAAgCS,GAAa,CAClEN,OAAQ,CACNC,QAAS,oCAEXC,OAAQH,EAAWG,SALE,cACjBC,EADiB,yBAQhBA,EAASC,MARO,2CAAH,sDAWTG,EAAe,mCAAG,gGAASC,EAAT,EAASA,QAAST,EAAlB,EAAkBA,WAAlB,SACNF,EAAAA,GAAAA,IAAA,iBAAoBW,GAAW,CACpDR,OAAQ,CACNC,QAAS,oCAEXC,OAAQH,EAAWG,SALQ,cACvBC,EADuB,yBAQtBA,EAASC,MARa,2CAAH,sDAUfK,EAAY,mCAAG,gGAASD,EAAT,EAASA,QAAST,EAAlB,EAAkBA,WAAlB,SACHF,EAAAA,GAAAA,IAAA,iBAAoBW,EAApB,YAAuC,CAC5DR,OAAQ,CACNC,QAAS,oCAEXC,OAAQH,EAAWG,SALK,cACpBC,EADoB,yBAQnBA,EAASC,MARU,2CAAH,sDAWZM,EAAe,mCAAG,gGAASF,EAAT,EAASA,QAAST,EAAlB,EAAkBA,WAAlB,SACNF,EAAAA,GAAAA,IAAA,iBAAoBW,EAApB,YAAuC,CAC5DR,OAAQ,CACNC,QAAS,oCAEXC,OAAQH,EAAWG,SALQ,cACvBC,EADuB,yBAQtBA,EAASC,MARa,2CAAH,qD,uKC5CfO,EAAWC,EAAAA,GAAAA,GAAH,8CAGRC,EAAWD,EAAAA,GAAAA,GAAH,uEAIRE,EAAWF,EAAAA,GAAAA,EAAH,6CAGRG,EAAUH,EAAAA,GAAAA,EAAH,4F,SC0DpB,EAjEa,WACX,IAAQJ,GAAYQ,EAAAA,EAAAA,MAAZR,QACR,GAAgCS,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KA6BA,OA3BAC,EAAAA,EAAAA,YAAU,WACR,IAAMrB,EAAa,IAAIsB,gBACjBC,EAAgB,CACpBd,QAAAA,EACAT,WAAAA,GAJY,wCAOd,kGAESS,EAFT,kEAK2BC,EAAAA,EAAAA,IAAaa,GALxC,gBAKYC,EALZ,EAKYA,KAERJ,EAAYI,GAPhB,kDASIC,QAAQC,IAAR,MATJ,2DAPc,sBAsBd,OAtBc,mCAoBdC,GAEO,WACL3B,EAAW4B,OACZ,CACF,GAAE,CAACnB,IAECU,GAKH,8BACuB,IAApBA,EAASU,QACR,SAACjB,EAAD,UACGO,EAASW,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,GAAlC,OACZ,UAACpB,EAAD,WACGiB,GACC,gBACEI,IAAG,8DAAyDJ,GAC5DK,IAAG,qBAAgBJ,MAGrB,gBACEG,IAAI,yDACJC,IAAI,aAIR,SAACrB,EAAD,UAAWiB,KACX,UAACjB,EAAD,yBAAsBkB,OAdTC,EADH,OAoBhB,SAAClB,EAAD,sDA3BG,IA+BV,C","sources":["components/api/Api.js","components/cast/Cast.styled.js","components/cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async controller => {\n  const response = await axios.get('trending/movie/day', {\n    params: {\n      api_key: '6f46b11c91adf322aba101aff37aa78d',\n    },\n    signal: controller.signal,\n  });\n\n  return response.data;\n};\n\nexport const getMovies = async ({ userQuery, controller }) => {\n  const response = await axios.get(`search/movie?query=${userQuery}`, {\n    params: {\n      api_key: '6f46b11c91adf322aba101aff37aa78d',\n    },\n    signal: controller.signal,\n  });\n\n  return response.data;\n};\n\nexport const getMovieDetails = async ({ movieId, controller }) => {\n  const response = await axios.get(`/movie/${movieId}`, {\n    params: {\n      api_key: '6f46b11c91adf322aba101aff37aa78d',\n    },\n    signal: controller.signal,\n  });\n\n  return response.data;\n};\nexport const getMovieCast = async ({ movieId, controller }) => {\n  const response = await axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: '6f46b11c91adf322aba101aff37aa78d',\n    },\n    signal: controller.signal,\n  });\n\n  return response.data;\n};\n\nexport const getMovieReviews = async ({ movieId, controller }) => {\n  const response = await axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: '6f46b11c91adf322aba101aff37aa78d',\n    },\n    signal: controller.signal,\n  });\n\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const ListCast = styled.ul`\n  margin-left: 30px;\n`;\nexport const ItemCast = styled.li`\n  padding-top: 15px;\n  padding-bottom: 15px;\n`;\nexport const TextCast = styled.p`\n  margin-top: 15px;\n`;\nexport const Message = styled.p`\n  padding-top: 15px;\n  padding-bottom: 15px;\n  font-weight: 500;\n`;\n","import { getMovieCast } from '../api/Api';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { ListCast, ItemCast, TextCast, Message } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castById, setCastById] = useState(null);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const paramsRequest = {\n      movieId,\n      controller,\n    };\n\n    async function fetchMovieCast() {\n      try {\n        if (!movieId) {\n          return;\n        }\n        const { cast } = await getMovieCast(paramsRequest);\n\n        setCastById(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchMovieCast();\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  if (!castById) {\n    return null;\n  }\n\n  return (\n    <>\n      {castById.length !== 0 ? (\n        <ListCast>\n          {castById.map(({ profile_path, name, character, id }) => (\n            <ItemCast key={id}>\n              {profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w185_and_h278_multi_faces${profile_path}`}\n                  alt={`profile of ${name}`}\n                />\n              ) : (\n                <img\n                  src=\"https://via.placeholder.com/185x278/?text=Comming_soon\"\n                  alt=\"profile\"\n                />\n              )}\n\n              <TextCast>{name}</TextCast>\n              <TextCast>Character: {character}</TextCast>\n            </ItemCast>\n          ))}\n        </ListCast>\n      ) : (\n        <Message>We don`t have any cast for this movie</Message>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","getTrendingMovies","controller","params","api_key","signal","response","data","getMovies","userQuery","getMovieDetails","movieId","getMovieCast","getMovieReviews","ListCast","styled","ItemCast","TextCast","Message","useParams","useState","castById","setCastById","useEffect","AbortController","paramsRequest","cast","console","log","fetchMovieCast","abort","length","map","profile_path","name","character","id","src","alt"],"sourceRoot":""}